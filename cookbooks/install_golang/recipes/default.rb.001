#
# Cookbook Name:: goapp
# Recipe:: default
#
#
# Get the current version of GO if it is installed
#
ruby_block "test_go_version" do
  node.set[:govn][:govers] = node.default[:govn][:govers]
#  node.set[:govn][:govnv] = node.default[:govn][:govnv]
  puts "####"
  puts node[:govn][:govnv]
  puts "####"
#  only_if { ::File.exists?("/usr/local/go/bin/go") }
    block do
#      node.set[:govn][:govnv] = %x(/usr/local/go/bin/go version)
      node.set[:govn][:govnv] = %x(/usr/local/go/bin/go version | sed 's/$//')
#      node.set[:govn][:govnv] = "TEST"
  puts "############################################# Set used"
    end
  puts "############################################# Set NOT used"
  puts node[:govn][:govnv]
  puts node.normal[:govn][:govnv]
  puts node.default[:govn][:govnv]
  puts node.override[:govn][:govnv]
  puts "####"
end
#
# Exit the installation if GO is already installed
#
pp node.debug_value(:govn)
return if node[:govn][:govnv] == node.default[:govn][:govers]
#
#  Get the golang install file
#
execute "fetch_go_media" do
#  puts "####"
#  puts node[:govn][:govnv]
#  puts node[:govn][:govers]
#  puts "####"
  command "cd /tmp; wget https://storage.googleapis.com/golang/go1.6.1.linux-amd64.tar.gz "
end
#
# unzip the gz file to the default golang installation directory /usr/local
#
execute "unzip_go_media" do
  command " tar -C /usr/local -xzf /tmp/go1.6.1.linux-amd64.tar.gz"
#  only_if do ::File.exists?('/tmp/go1.6.1.linux-amd64.tar.gz') end
end
#
# remove the zip file.
#
execute "clean_go_media" do
  command "rm /tmp/go1.6.1.linux-amd64.tar.gz"
  only_if do ::File.exists?('/tmp/go1.6.1.linux-amd64.tar.gz') end
end
#
# Configure the environment variables
#
cookbook_file "/etc/init.d/golang.csh" do
  source "golang.csh"
  action :create
end
cookbook_file "/etc/init.d/golang.sh" do
  source "golang.sh"
  action :create
end
#
# create the workspace to put the GO app into
#
directory "/usr/local/go/workspace" do
  action :create
end
#
# Insert the GO app into the workspace
#
cookbook_file "/usr/local/go/workspace/sainsb.go" do
  source "sainsb.go"
  action :create
end
#
# Create the service configuration file for the GO app
#
cookbook_file "/etc/systemd/system/goapp.service" do
  source "goapp.service"
  action :create
end
#
# start the go app as a service and set it to restart
#
service "goapp" do
  action [ :enable, :start ]
end

